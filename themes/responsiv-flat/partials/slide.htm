[viewBag]

[blogPosts]
pageNumber = "{{ :page }}"
categoryFilter = "portfolio"
postsPerPage = 10
noPostsMessage = "No posts found"
sortOrder = "random"
categoryPage = "blog/category"
postPage = "blog/post"
==
<!-- Demo CSS -->
<link rel="stylesheet" href="{{ 'assets/css/flexslider.css'|theme }}" type="text/css" media="screen" />
<style>
.slide-container {
  position: relative;
  margin: 0 auto;

}
@media screen and (min-width: 1024px) {
  .flexslider .slides img {
    vertical-align: middle;
  }
  .slide-container {
    height: 375px;
  }
}
.slide-container .slide-content {
  position: absolute;
  bottom: 0;
  background: rgb(0, 0, 0); /* Fallback color */
  background: rgba(0, 0, 0, 0.5); /* Black background with 0.5 opacity */
  color: #f1f1f1;
  width: 100%;
  padding: 6px;
  height: 18%;
  text-align: center;
}
.slide-content span {
  font-family: Kanit;
}
</style>
<h4><span><a href="/blog/category/portfolio">{{ 'Portfolio'|_ }}</a></span></h4>
<div class="flexslider">
  <ul class="slides">
    <!--<li>
      <iframe id="player_1" src="https://player.vimeo.com/video/39683393?api=1&amp;player_id=player_1" width="500" height="281" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
    </li>
    <li><div id="youtube_{{i}}"></div></li>-->

    {% set posts = blogPosts.posts %}

    {% for post in posts %}
    <li>
      <div class="slide-container">
        {% if post.featured_images.count %}
          <img src="{{ post.featured_images[0].path | resize(960, 639) }}" class="img-responsive"  />
        {% else %}
          <img src="/themes/responsiv-flat/assets/images/blog/noimg-{{random(22)}}.jpg" class="img-responsive"/>
        {% endif %}
        <div class="slide-content">
          <span><a href="{{ post.url }}" style="color:#f1f1f1;">{{ post.title }}</a></span>
          <div>{{ post.excerpt|slice(0,70)|raw }}</div>
        </div>
      </div>

    </li>
    {% endfor %}
  </ul>
</div>
{% put scripts %}
<!-- FlexSlider -->
<script defer src="{{ 'assets/js/flexslider/jquery.flexslider.js'|theme }}"></script>

<script type="text/javascript">

  $(window).load(function(){

    // Vimeo API nonsense
    //var player = document.getElementById('player_1');
    //$f(player).addEvent('ready', ready);

    function addEvent(element, eventName, callback) {
      (element.addEventListener) ? element.addEventListener(eventName, callback, false) : element.attachEvent(eventName, callback, false);
    }

    function ready(player_id) {
      var froogaloop = $f(player_id);

      froogaloop.addEvent('play', function(data) {
        $('.flexslider').flexslider("pause");
      });

      froogaloop.addEvent('pause', function(data) {
        $('.flexslider').flexslider("play");
      });
    }


    // Call fitVid before FlexSlider initializes, so the proper initial height can be retrieved.
    $(".flexslider")
      .fitVids()
      .flexslider({
        animation: "slide",
        useCSS: false,
        animationLoop: true,
        smoothHeight: true,
        slideshow: true,
        /*start: function(slider){
          $('body').removeClass('loading');
        },
        before: function(slider){
          $f(player).api('pause');
        }*/
    });
  });


  // YouTube
  // Load the iFrame Player API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/player_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var player,
  youtubePlayers = [];

  // Replace the 'ytplayer' element with an <iframe> and
  // YouTube player after the API code downloads.
  function onYouTubePlayerAPIReady() {
    var list = Array('kgP4w-VTWQ4', '51EmDgR_hus', 'JfUtt70expo', '_VluJjS3IfQ');
    for(i=0;i<list.length;i++) {
      player = new YT.Player('youtube_'+i, {
        //		height: '281',
        videoId: list[i],
        playerVars: { 'autoplay': 0, 'controls': 0 },
        events: {
          'onStateChange': onPlayerStateChange
        }
      });
      youtubePlayers[i] = player;
    }
  }

  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING || event.data == YT.PlayerState.BUFFERING) {
      console.log( 'Playing / Buffering' );
      $('.flexslider').flexslider("pause");
    }
    else if (event.data == YT.PlayerState.ENDED || event.data == YT.PlayerState.PAUSED) {
      console.log('Ended / Paused');
      $('.flexslider').flexslider("play");
    }
  }

  function pausePlayers() {
    var i = 0;
    for (i; i < youtubePlayers.length; i+=1) {
      // YouTube videos
      youtubePlayers[i].pauseVideo();
    }
  }
</script>

<!-- Optional FlexSlider Additions -->
<script src="{{ 'assets/js/flexslider/froogaloop.js'|theme }}"></script>
<script src="{{ 'assets/js/flexslider/jquery.fitvid.js'|theme }}"></script>
{% endput %}